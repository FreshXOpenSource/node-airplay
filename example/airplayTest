#!/usr/local/bin/node

var timeOut = 5000;


//  Make sure you have those images in place

var imageUrl1 = "https://www.google.com/images/srpr/logo4w.png"
var fileEarth="./earth.jpg"
var fileMoon="./moon.jpg"
var fileMars="./mars.jpg"

var argv = require('optimist')
    .usage("Usage: $0 -n [airplay server name]")
    .string('n', 'name')
    .string(['t'])
    .alias("n", "name")
    .alias("t", "timeout")
    .describe("n", "name of airplay server")
    .describe("t", "timeout between images in milliseconds")
    .argv;

var browser = require('airplay').createBrowser();
console.log('Looking for airplay devices');

if(argv.t) {
	timeOut = argv.t;
	console.log('Timeout set to '+timeOut);
}

var timer = setTimeout(function() { console.log('Timed out. Exit.'); browser.stop();} ,timeOut);

function moon(device, x){
	return function(){
        device.showImageFile(fileMoon)
		setTimeout(x, timeOut);
	}
}

function mars(device, x){
	return function(){
        device.showImageFile(fileMars)
		if(x)setTimeout(x, timeOut);
	}
}

function earth(device, x){
	return function(){
        device.showImageFile(fileEarth)
		//device.play(imageUrl1, 0);
		setTimeout(x, timeOut);
	}
}

var n = 0

nextFile = function(device)
{
    return function(key, callback)
    {
        var crypto = require('crypto')
        var id = crypto.createHash('sha1')
        if(n % 3 == 0)
            device.convertFile(fileEarth, n, key, callback)
        else if(n % 3 == 1)
            device.convertFile(fileMoon, n, key, callback)
        else
            device.convertFile(fileMars, n, key, callback)
        n++
    }
}

function eventHandler(e){
    // console.log(e)
}

function startTimer(){}

browser.on('deviceOnline', function(device){
	console.log('Found Airplay device : device id '+device.id+' / '+device.info_.name);
	if(!(device.info_.name == argv.n || argv.n == undefined)) {
		console.log('\tThis is not my device. Skipping...')
		device.close()
        return
	}

    console.log('\tThis is my device (or no specific device given).')
	clearTimeout(timer)
	console.log('\tName : '+device.info_.name)
	console.log('\tIPs : '+device.info_.addresses)

    device.connectPTTH(eventHandler, function(){
        var series = [
//              function(callback){
//                  device.loadImageFile(fileMoon, {}, callback)                
//              },
//              function(callback){
//                  device.loadImageFile(fileMars, {}, callback)                
//              },
//              function(callback){
//                  device.loadImageFile(fileEarth, {}, callback)                
//              }
        ]

        var async = require("async")
        async.series(series, function(err, res){
            device.connectSS(nextFile(device), function(){
                // console.log("Uplaod done. Start playlist")
                device.startSlideshow(function(res){
                    // console.log("Start playlist done")
                })
            }) 
        })

	    // var loop = function(){	
	    // 	earth(device, moon(device, mars(device, loop)))()
	    // }
	    // loop()
   })
});

browser.start();
